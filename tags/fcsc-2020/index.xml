<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>FCSC 2020 on redoste</title><link>https://redoste.xyz/tags/fcsc-2020/</link><description>Recent content in FCSC 2020 on redoste</description><generator>Hugo</generator><language>en-us</language><copyright>© 2020 - 2024 redoste - [CC-BY-4.0](https://creativecommons.org/licenses/by/4.0/)</copyright><lastBuildDate>Mon, 04 May 2020 18:00:00 +0200</lastBuildDate><atom:link href="https://redoste.xyz/tags/fcsc-2020/index.xml" rel="self" type="application/rss+xml"/><item><title>[FR] Write-up FCSC 2020 : Hello Rootkitty</title><link>https://redoste.xyz/2020/05/04/fr-write-up-fcsc-2020-hello-rootkitty/</link><pubDate>Mon, 04 May 2020 18:00:00 +0200</pubDate><guid>https://redoste.xyz/2020/05/04/fr-write-up-fcsc-2020-hello-rootkitty/</guid><description>&lt;h1 id="i---intro">I - Intro&lt;/h1>
&lt;p>Le challenge se compose d&amp;rsquo;un module Linux pour un kernel &lt;code>4.14.167 amd64&lt;/code>. Celui-ci est chargé automatiquement dans une VM QEMU accessible via une connexion ssh sur la machine hôte.&lt;/p>
&lt;h1 id="ii---analyse-statique-et-découverte-du-buffer-overflow">II - Analyse statique et découverte du buffer overflow&lt;/h1>
&lt;p>Après une analyse statique du binaire avec &lt;em>Ghidra&lt;/em>, nous remarquons que le module va modifier la table des syscalls pour remplacer &lt;code>lstat&lt;/code>, &lt;code>getdents&lt;/code> et &lt;code>getdents64&lt;/code>.
Ces versions modifiées des syscalls vont faire appel a ceux d&amp;rsquo;origine et modifier leur retour de manière à masquer les informations à propos des fichiers commençant par &lt;code>ecsc_flag_&lt;/code>. Le but est donc de trouver un moyen de contourner cette restriction de manière à pouvoir lire le fichier contenant le flag à la racine de la machine.&lt;/p></description></item><item><title>[FR] Write-up FCSC 2020 : Risky Business</title><link>https://redoste.xyz/2020/05/04/fr-write-up-fcsc-2020-risky-business/</link><pubDate>Mon, 04 May 2020 18:00:00 +0200</pubDate><guid>https://redoste.xyz/2020/05/04/fr-write-up-fcsc-2020-risky-business/</guid><description>&lt;h1 id="i---intro">I - Intro&lt;/h1>
&lt;p>Le challenge est composé d&amp;rsquo;un simple binaire ELF RISC-V.&lt;/p>
&lt;pre tabindex="0">&lt;code>$ file risky-business
risky-business: ELF 64-bit LSB shared object, UCB RISC-V, version 1 (SYSV), dynamically linked, interpreter /lib/ld-linux-riscv64-lp64d.so.1, for GNU/Linux 4.15.0, BuildID[sha1]=..., not stripped
&lt;/code>&lt;/pre>&lt;p>Le but est d&amp;rsquo;exploiter ce binaire de manière à obtenir un shell sur la machine l&amp;rsquo;exécutant. On peut interagir avec lui via une simple connexion TCP que l&amp;rsquo;on peut établir avec &lt;code>netcat&lt;/code>.&lt;/p>
&lt;pre tabindex="0">&lt;code>nc challenges1.france-cybersecurity-challenge.fr 4004
&lt;/code>&lt;/pre>&lt;p>À première vue le binaire semble accepter des données via l&amp;rsquo;entrée standard avant de s&amp;rsquo;arrêter.&lt;/p></description></item><item><title>[FR] Write-up FCSC 2020 : Why not a Sandbox</title><link>https://redoste.xyz/2020/05/04/fr-write-up-fcsc-2020-why-not-a-sandbox/</link><pubDate>Mon, 04 May 2020 18:00:00 +0200</pubDate><guid>https://redoste.xyz/2020/05/04/fr-write-up-fcsc-2020-why-not-a-sandbox/</guid><description>&lt;h1 id="i---intro">I - Intro&lt;/h1>
&lt;p>Le challenge se compose d&amp;rsquo;un interpréteur Python 3.8.2 avec lequel nous pouvons interagir via une simple connexion TCP obtenable avec &lt;code>netcat&lt;/code>. Cet interpréteur modifié va lever une exception lorsque certaine actions sont effectuées. Il est donc impossible d&amp;rsquo;appeler &lt;code>os.system&lt;/code> pour obtenir un shell ou d&amp;rsquo;ouvrir un fichier avec &lt;code>open()&lt;/code>. Le but est donc d&amp;rsquo;appeler la fonction &lt;code>print_flag()&lt;/code> qui a été ajoutée à la librairie principale de Python, qui peut être accédée via le module &lt;code>ctypes&lt;/code>. Cependant celle-ci va aussi lever une exception.&lt;/p></description></item></channel></rss>