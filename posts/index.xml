<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on redoste</title><link>https://redoste.xyz/posts/</link><description>Recent content in Posts on redoste</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>© 2020 - 2024 redoste - [CC-BY-4.0](https://creativecommons.org/licenses/by/4.0/)</copyright><lastBuildDate>Sun, 14 Apr 2024 22:00:00 +0200</lastBuildDate><atom:link href="https://redoste.xyz/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>Write-up FCSC 2024 : Kraken</title><link>https://redoste.xyz/2024/04/14/write-up-fcsc-2024-kraken/</link><pubDate>Sun, 14 Apr 2024 22:00:00 +0200</pubDate><guid>https://redoste.xyz/2024/04/14/write-up-fcsc-2024-kraken/</guid><description>I - Intro Kraken looks like a fairly complex reversing challenge. We are given a few more files at the start in addition to the binary, the most important one being a Dockerfile that sets up a specific environement required to run the program easily.
A quick look at this Dockerfile will tease us about what we are about to endure:
FROM debian:bookworm-slim WORKDIR /build RUN echo &amp;#34;deb-src http://http.us.debian.org/debian bookworm main&amp;#34; &amp;gt;&amp;gt; /etc/apt/sources.</description></item><item><title>Write-up FCSC 2023 : Contrôleur de licence</title><link>https://redoste.xyz/2023/04/30/write-up-fcsc-2023-contr%C3%B4leur-de-licence/</link><pubDate>Sun, 30 Apr 2023 22:00:00 +0200</pubDate><guid>https://redoste.xyz/2023/04/30/write-up-fcsc-2023-contr%C3%B4leur-de-licence/</guid><description>I - Intro At first glace, Contrôleur de licence seems to be a classic Windows reverse challenge. We give an input in the arguments and we get a &amp;ldquo;Invalid serial&amp;rdquo; MessageBox in response.
After importing the binary in Ghidra, we can already spot a few suspicious imports, such as CreateDecompressor and Decompress from CABINET.DLL or WriteProcessMemory and SetThreadContext from KERNEL32.DLL.
It looks like the program will need to decompress data and modify the execution from other processes, this might be some kind of custom packer for the underlying input checking binary.</description></item><item><title>Write-up FCSC 2023 : Video Games Awards</title><link>https://redoste.xyz/2023/04/30/write-up-fcsc-2023-video-games-awards/</link><pubDate>Sun, 30 Apr 2023 22:00:00 +0200</pubDate><guid>https://redoste.xyz/2023/04/30/write-up-fcsc-2023-video-games-awards/</guid><description>NOTE : This is the version of the write-up that was sent to the FCSC organizers as part of the selection for the ECSC. I was in a rush for the deadline and I&amp;rsquo;m not completely satisfied with it : it goes too straight to the point and lacks a lot of details.
I will try to complete it in the future, if I have the motivation to do so and don&amp;rsquo;t forget about it (i.</description></item><item><title>[FR] Write-up FCSC 2022 : More Hello</title><link>https://redoste.xyz/2022/05/08/fr-write-up-fcsc-2022-more-hello/</link><pubDate>Sun, 08 May 2022 18:00:00 +0200</pubDate><guid>https://redoste.xyz/2022/05/08/fr-write-up-fcsc-2022-more-hello/</guid><description>I - Intro More Hello se compose d&amp;rsquo;un simple binaire FreeBSD AArch64 qui semble abordable.
$ file more_hello more_hello: ELF 64-bit LSB pie executable, ARM aarch64, version 1 (SYSV), dynamically linked, interpreter /libexec/ld-elf.so.1, for FreeBSD 14.0 (1400046), FreeBSD-style, stripped Premier reflexe, on importe le binaire dans Ghidra pour avoir une idée de ce qu&amp;rsquo;il fait.
Oh non.
Ca risque de ne pas être aussi simple que prévu.
En relisant la description du challenge on remarque un détail assez spécial :</description></item><item><title>Write-up FCSC 2022 : Perfect Cell - Stars:3rdMix PS3Edition</title><link>https://redoste.xyz/2022/05/08/write-up-fcsc-2022-perfect-cell-stars3rdmix-ps3edition/</link><pubDate>Sun, 08 May 2022 18:00:00 +0200</pubDate><guid>https://redoste.xyz/2022/05/08/write-up-fcsc-2022-perfect-cell-stars3rdmix-ps3edition/</guid><description>I - Intro The description of Perfect Cell states that a friend of us made an homebrew for an &amp;ldquo;amazing multiplayer fighting game&amp;rdquo;. It&amp;rsquo;s joined with a file with the .self extension.
We&amp;rsquo;ll start with the first obvious thing
$ file perfect-cell.self perfect-cell.self: data Oh.
That&amp;rsquo;s a good start.
Binwalk is able to find an ELF header a little bit later in the file but even after removing the first 0x90 bytes the file reamains unusable.</description></item><item><title>Write-up UIUCTF 2021 : ropfuscated</title><link>https://redoste.xyz/2021/08/03/write-up-uiuctf-2021-ropfuscated/</link><pubDate>Tue, 03 Aug 2021 00:00:00 +0200</pubDate><guid>https://redoste.xyz/2021/08/03/write-up-uiuctf-2021-ropfuscated/</guid><description>I - Intro ropfuscated is composed of a single but huge (4.1MiB, that&amp;rsquo;s about half of the Linux kernel installed on my laptop) x86-64 Linux binary. Running it for the first time, we are greated by a message asking us to draw a patern with the mouse in a way that mimic the Android lockscreen. Some ANSI terminal magic allows the program to follow the mouse and draw the pattern with tildes.</description></item><item><title>[FR] Write-up FCSC 2021 : Stars:2ndMix CryptoEdition</title><link>https://redoste.xyz/2021/05/03/fr-write-up-fcsc-2021-stars2ndmix-cryptoedition/</link><pubDate>Mon, 03 May 2021 18:00:00 +0200</pubDate><guid>https://redoste.xyz/2021/05/03/fr-write-up-fcsc-2021-stars2ndmix-cryptoedition/</guid><description>I - Intro Stars:2ndMix CryptoEdition se compose d&amp;rsquo;une image d&amp;rsquo;un disque de Dreamcast au format DiscJuggler. Ce challenge me semblait intéressant, car j&amp;rsquo;ai comme une attirance pour les architectures bizares et mal documentées, j&amp;rsquo;ai notamment précedemment travaillé sur un debuggeur pour calculatrices Casio qui ont la particularité d&amp;rsquo;utiliser la même architecuture que la Dreamcast (SuperH 4).
Il nous est indiqué dans la description du challenge que celui avait été testé avec Flycast, on télécharge donc le code source et on utilise cmake pour le compiler.</description></item><item><title>[FR] Write-up FCSC 2021 : VMV</title><link>https://redoste.xyz/2021/05/03/fr-write-up-fcsc-2021-vmv/</link><pubDate>Mon, 03 May 2021 18:00:00 +0200</pubDate><guid>https://redoste.xyz/2021/05/03/fr-write-up-fcsc-2021-vmv/</guid><description>I - Intro VMV se compose d&amp;rsquo;un simple executable ELF pour Linux x86-64. Il demande une chaine de 16 caractères de long en entrée et est censé nous indiquer s&amp;rsquo;il s&amp;rsquo;aggit du bon flag.
On peut essayer de l&amp;rsquo;executer pour voir :
$ ./vmv 0123456789ABCDEF [fr] Ne quittez pas, un correspondant va prendre votre appel... [\fr] * bruit de ventilateur de PC qui accélère * [fr] Ne quittez pas, un correspondant va prendre votre appel.</description></item><item><title>[FR] Write-up FCSC 2020 : Hello Rootkitty</title><link>https://redoste.xyz/2020/05/04/fr-write-up-fcsc-2020-hello-rootkitty/</link><pubDate>Mon, 04 May 2020 18:00:00 +0200</pubDate><guid>https://redoste.xyz/2020/05/04/fr-write-up-fcsc-2020-hello-rootkitty/</guid><description>I - Intro Le challenge se compose d&amp;rsquo;un module Linux pour un kernel 4.14.167 amd64. Celui-ci est chargé automatiquement dans une VM Qemu accessible via une connexion ssh sur la machine hôte.
II - Analyse statique et le buffer overflow Après une analyse statique du binaire avec Ghidra, nous remarquons que le module va modifier la table des syscalls et remplacer les syscalls lstat, getdents et getdents64. Ces versions modifiées des syscalls vont faire appel aux syscalls d&amp;rsquo;origine et modifier leur retour de manière à masquer les informations à propos des fichiers commençant par ecsc_flag_.</description></item><item><title>[FR] Write-up FCSC 2020 : Risky Business</title><link>https://redoste.xyz/2020/05/04/fr-write-up-fcsc-2020-risky-business/</link><pubDate>Mon, 04 May 2020 18:00:00 +0200</pubDate><guid>https://redoste.xyz/2020/05/04/fr-write-up-fcsc-2020-risky-business/</guid><description>I - Intro Le challenge est composé d&amp;rsquo;un simple binaire ELF RISC-V.
$ file risky-business risky-business: ELF 64-bit LSB shared object, UCB RISC-V, version 1 (SYSV), dynamically linked, interpreter /lib/ld-linux-riscv64-lp64d.so.1, for GNU/Linux 4.15.0, BuildID[sha1]=..., not stripped Le but est d&amp;rsquo;exploiter ce binaire de manière à obtenir un shell sur la machine l&amp;rsquo;exécutant. On peut interagir avec lui via une simple connexion TCP que l&amp;rsquo;on peut établir avec netcat.
nc challenges1.france-cybersecurity-challenge.fr 4004 A première vue le binaire semble accepter des données via l&amp;rsquo;entrée standard avant de s&amp;rsquo;arrêter.</description></item><item><title>[FR] Write-up FCSC 2020 : Why not a Sandbox</title><link>https://redoste.xyz/2020/05/04/fr-write-up-fcsc-2020-why-not-a-sandbox/</link><pubDate>Mon, 04 May 2020 18:00:00 +0200</pubDate><guid>https://redoste.xyz/2020/05/04/fr-write-up-fcsc-2020-why-not-a-sandbox/</guid><description>I - Intro Le challenge se compose d&amp;rsquo;un interpréteur Python 3.8.2 avec le quel on peut interagir via une simple connexion TCP obtenable avec netcat. Cet interpréteur modifié va lever une exception lorsque certaine actions sont effectuée. Il est donc impossible d&amp;rsquo;appeler os.system pour obtenir un shell mais aussi d&amp;rsquo;ouvrir un fichier avec open(). Le but est donc d&amp;rsquo;appeler la fonction print_flag() qui à été ajoutée à la librairie principale de python que l&amp;rsquo;ont peut accéder via le module ctypes, celle-ci va aussi lever une exception.</description></item><item><title>Modding Wii Sports : Part I : Identifying files and creating a debug output</title><link>https://redoste.xyz/2020/04/21/modding-wii-sports-part-i-identifying-files-and-creating-a-debug-output/</link><pubDate>Tue, 21 Apr 2020 16:00:00 +0200</pubDate><guid>https://redoste.xyz/2020/04/21/modding-wii-sports-part-i-identifying-files-and-creating-a-debug-output/</guid><description>A few months ago I saw someone playing Wii Sports doing some Golf. This reminded me I always wanted to create custom golf tracks. After a little bit of search, I found out that nobody really did it. Some people were asking if someone did it and they were a few attempts on Wii Sport Resort (here, here or here) but I found no real public source code or walkthrough of how to do your own custom golf track on the original Wii Sports.</description></item><item><title>New Website !</title><link>https://redoste.xyz/1970/01/01/new-website/</link><pubDate>Thu, 01 Jan 1970 00:00:00 +0000</pubDate><guid>https://redoste.xyz/1970/01/01/new-website/</guid><description>Hello !
I&amp;rsquo;ve just made my website a little more usefull and modern. The old one was just a fancy list of my GitHub repos in French. This time I will try to post usefull stuffs&amp;hellip;
I use the Hugo static website generator and of course everything is avaliable publicly on GitHub.</description></item></channel></rss>